How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It edited out all but the differences, allowing my serch to be more focused.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Perhaps - I wouldn't want to spend/waste time thinking about older obsolete versions.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro - you get logically useful revision points
    Cons - Subject to human error - you can forget, or get sloppy

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is designed for multi-user, multi-file projects, while G Docs is more for written papers.

How can you use the commands git log and git diff to view the history of files?

    You can see how the features were built or bugs resolved.  (It's also useful to find where bugs started.)

How might using version control make you more confident to make changes that
could break something?

    You'd know you could revert to a stable workable version, so you're more free to try new things

Now that you have your workspace set up, what do you want to try using Git for?

    Next project, plus my own collbrative creation